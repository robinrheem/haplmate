name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86_64 (glibc)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz

          # Linux x86_64 (musl, static-ish)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: tar.gz

          # macOS Intel
          - os: macos-13
            target: x86_64-apple-darwin
            ext: tar.gz

          # macOS Apple Silicon
          - os: macos-14
            target: aarch64-apple-darwin
            ext: tar.gz

          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: zip

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: (Linux) Install musl tools if needed
        if: runner.os == 'Linux' && contains(matrix.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Package (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p dist
          BIN=haplmate
          SRC=target/${{ matrix.target }}/release/$BIN
          OUT=haplmate-${{ matrix.target }}
          cp "$SRC" "dist/$OUT"
          tar -C dist -czf "dist/$OUT.${{ matrix.ext }}" "$OUT"
          rm "dist/$OUT"

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          $bin = "haplmate.exe"
          $src = "target/${{ matrix.target }}/release/$bin"
          $out = "haplmate-${{ matrix.target }}.exe"
          Copy-Item $src ("dist/" + $out)
          Compress-Archive -Path ("dist/" + $out) -DestinationPath ("dist/haplmate-${{ matrix.target }}.${{ matrix.ext }}")
          Remove-Item ("dist/" + $out)

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true

      - name: Generate checksums
        run: |
          ls -l
          sha256sum * > SHA256SUMS.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
            *.zip
            SHA256SUMS.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
